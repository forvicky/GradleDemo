// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    //配置工程的仓库地址
    repositories {
        google()
        jcenter()

        //私有maven仓库
        maven{
            name 'zdd'
            url 'http://localhost:8081:/nexus/repositories/'
            credentials{
                username='admin'
                password='admin123'
            }

        }
    }

    //配置我们工程的“插件”依赖地址
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.2'
        
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

this.beforeEvaluate {
    println "配置执行之前..."
}

this.afterEvaluate {
    println "配置阶段执行完毕"

}

this.gradle.buildFinished {
    println "执行阶段执行完毕"
}


this.getProjects()

def getProjects(){
    println '--------------------'
    println 'Root Project'
    println '--------------------'
    this.getAllprojects().eachWithIndex{ Project project, int index ->
        if(index == 0 ){
            println "Root project :${project.name}"
        }else{
            println "+--- project :${project.name}"
        }
    }
}

project('app'){ Project project->
    apply plugin:'com.android.application'
    group 'com.zdd'
    version '1.0.0-release'
    dependencies {

    }

    android{

    }
}

project('mylibrary'){ Project project->
    apply plugin:'com.android.library'
    group 'com.zdd'
    version '1.0.0-release'
    dependencies {

    }

    android{

    }
}

allprojects{
    group 'com.zdd'
    version '1.0.0-release'
}

subprojects { Project project->
    if(project.plugins.hasPlugin('com.android.library')){
        apply from:'../publishToMaven.gradle'
    }

}

//subprojects { Project project->
//    //扩展Project属性,一个build.gradle对应一个project实体
//    ext{
//        compileSdkVersion=28
//        appcompatLibName='com.android.support:appcompat-v7:28.0.0'
//    }
//
//}

apply from: this.file('common.gradle')

println project('mylibrary').group

println "getRootDir().absolutePath="+getRootDir().absolutePath
println "getBuildDir().absolutePath="+getBuildDir().absolutePath
println "getProjectDir().absolutePath="+getProjectDir().absolutePath

println getContent('common.gradle')

def getContent(String path){
    try{
        def file=file(path)   //file()查找当前project下的文件
        return file.text
    }catch(GradleException e){
        println 'file not found...'
    }

    return null
}

task apkcopy{
    //gradle的执行阶段去执行
    doLast{
        def sourcePath=project('app').buildDir.path+'\\outputs\\apk'
        def toPath='C:\\Users\\zdd\\Desktop\\DidpSdk\\build'

        def realCommands="xcopy ${sourcePath} ${toPath} /h /e /y"

        println realCommands
        //执行外部命令
        exec{
            try{
                def commands = []
                if (System.getProperty("os.name").toLowerCase().startsWith("windows")) {
                    commands << 'cmd'
                    commands << '/c'
                } else {
                    commands << 'bash'
                    commands << '-c'
                }
                commands << realCommands
                commandLine = commands
                println 'the command is execute success.'
            }catch(GradleException e){
                println 'the command is execute failed.'
            }
        }
    }
}