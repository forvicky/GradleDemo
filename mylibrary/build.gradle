apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion

    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    compileOptions {
        sourceCompatibility rootProject.ext.java.javaVersion
        targetCompatibility rootProject.ext.java.javaVersion
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}




dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation rootProject.ext.dependence.libSupportV7
    testImplementation rootProject.ext.dependence.libJunit
    androidTestImplementation rootProject.ext.dependence.libTestRunner
    androidTestImplementation rootProject.ext.dependence.libTestEspresso
}

task makeJar(type: Copy,group:'nlp'){
    from('build/intermediates/packaged-classes/release/')
    into(getRootProject().getRootDir().path+'/app/libs/')
    include('classes.jar')
    rename('classes.jar','blesdk-'+rootProject.ext.android.versionName+'.jar')
}

//配置后task才能被找到
this.afterEvaluate {
    tasks.matching {
        it.name.equals('makeJar')

    }.each{task->
        task.dependsOn(assemble)

    }

}
